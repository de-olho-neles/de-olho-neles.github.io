// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server.Data;

namespace server.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20190911124724_DetailedDeputadoMigration")]
    partial class DetailedDeputadoMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("server.Data.Entities.Despesa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailedDeputadoid");

                    b.Property<int>("ano");

                    b.Property<string>("cnpjCpfFornecedor");

                    b.Property<int>("codDocumento");

                    b.Property<int>("codLote");

                    b.Property<int>("codTipoDocumento");

                    b.Property<string>("dataDocumento");

                    b.Property<int>("mes");

                    b.Property<string>("nomeFornecedor");

                    b.Property<string>("numDocumento");

                    b.Property<string>("numRessarcimento");

                    b.Property<int>("parcela");

                    b.Property<string>("tipoDespesa");

                    b.Property<string>("tipoDocumento");

                    b.Property<string>("urlDocumento");

                    b.Property<double>("valorDocumento");

                    b.Property<double>("valorGlosa");

                    b.Property<double>("valorLiquido");

                    b.HasKey("id");

                    b.HasIndex("DetailedDeputadoid");

                    b.ToTable("Despesa");
                });

            modelBuilder.Entity("server.Data.Entities.DetailedDeputado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UsuarioId");

                    b.Property<string>("cpf");

                    b.Property<string>("dataFalecimento");

                    b.Property<string>("dataNascimento");

                    b.Property<string>("email");

                    b.Property<string>("escolaridade");

                    b.Property<string>("municipioNascimento");

                    b.Property<string>("nomeCivil");

                    b.Property<string>("sexo");

                    b.Property<string>("ufNascimento");

                    b.Property<int?>("ultimoStatusid");

                    b.Property<string>("uri");

                    b.Property<string>("urlWebsite");

                    b.HasKey("id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("ultimoStatusid");

                    b.ToTable("DetailedDeputado");
                });

            modelBuilder.Entity("server.Data.Entities.Frente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailedDeputadoid");

                    b.Property<int>("idLegislatura");

                    b.Property<string>("titulo");

                    b.Property<string>("uri");

                    b.HasKey("id");

                    b.HasIndex("DetailedDeputadoid");

                    b.ToTable("Frente");
                });

            modelBuilder.Entity("server.Data.Entities.Gabinete", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("andar");

                    b.Property<string>("email");

                    b.Property<string>("nome");

                    b.Property<string>("predio");

                    b.Property<string>("sala");

                    b.Property<string>("telefone");

                    b.HasKey("id");

                    b.ToTable("Gabinete");
                });

            modelBuilder.Entity("server.Data.Entities.Orgao", b =>
                {
                    b.Property<int>("idOrgao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailedDeputadoid");

                    b.Property<string>("codTitulo");

                    b.Property<string>("dataFim");

                    b.Property<string>("dataInicio");

                    b.Property<string>("nomeOrgao");

                    b.Property<string>("siglaOrgao");

                    b.Property<string>("titulo");

                    b.Property<string>("uriOrgao");

                    b.HasKey("idOrgao");

                    b.HasIndex("DetailedDeputadoid");

                    b.ToTable("Orgao");
                });

            modelBuilder.Entity("server.Data.Entities.UltimoStatus", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("condicaoEleitoral");

                    b.Property<string>("data");

                    b.Property<string>("descricaoStatus");

                    b.Property<string>("email");

                    b.Property<int?>("gabineteid");

                    b.Property<int>("idLegislatura");

                    b.Property<string>("nome");

                    b.Property<string>("nomeEleitoral");

                    b.Property<string>("siglaPartido");

                    b.Property<string>("siglaUf");

                    b.Property<string>("situacao");

                    b.Property<string>("uri");

                    b.Property<string>("uriPartido");

                    b.Property<string>("urlFoto");

                    b.HasKey("id");

                    b.HasIndex("gabineteid");

                    b.ToTable("UltimoStatus");
                });

            modelBuilder.Entity("server.Data.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<int>("UserId");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("server.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("server.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("server.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("server.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("server.Data.Entities.Despesa", b =>
                {
                    b.HasOne("server.Data.Entities.DetailedDeputado")
                        .WithMany("despesas")
                        .HasForeignKey("DetailedDeputadoid");
                });

            modelBuilder.Entity("server.Data.Entities.DetailedDeputado", b =>
                {
                    b.HasOne("server.Data.Entities.Usuario")
                        .WithMany("Deputados")
                        .HasForeignKey("UsuarioId");

                    b.HasOne("server.Data.Entities.UltimoStatus", "ultimoStatus")
                        .WithMany()
                        .HasForeignKey("ultimoStatusid");
                });

            modelBuilder.Entity("server.Data.Entities.Frente", b =>
                {
                    b.HasOne("server.Data.Entities.DetailedDeputado")
                        .WithMany("frentes")
                        .HasForeignKey("DetailedDeputadoid");
                });

            modelBuilder.Entity("server.Data.Entities.Orgao", b =>
                {
                    b.HasOne("server.Data.Entities.DetailedDeputado")
                        .WithMany("orgaos")
                        .HasForeignKey("DetailedDeputadoid");
                });

            modelBuilder.Entity("server.Data.Entities.UltimoStatus", b =>
                {
                    b.HasOne("server.Data.Entities.Gabinete", "gabinete")
                        .WithMany()
                        .HasForeignKey("gabineteid");
                });
#pragma warning restore 612, 618
        }
    }
}
